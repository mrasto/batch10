---
- hosts: all
  become: true
  tasks:
    - name: install maven
      apt:
        pkg: maven
        state: present
      notify:
      - run update

    - name: create docker group
      become: true
      group:
        name: docker
        state: present
    
    - name: add user to group 
      become: true
      user:
        name: "manikalv"
        groups: docker
        append: true
    
    - meta: reset_connection                # <--- must do this if using pipelining
    
    ##### setup docker
    
    - name: install packages required by docker
      become: true
      apt:
        update_cache: yes
        state: latest
        name:
        - apt-transport-https
        - ca-certificates
        - curl
        - gpg-agent
        - software-properties-common
    
    - name: add docker GPG key
      become: true
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    
    - name: add docker apt repo
      become: true
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present
    
    - name: install docker
      become: true
      apt:
        update_cache: yes
        state: latest
        name:
        - docker-ce
        - docker-ce-cli
        - containerd.io
    
    ##### setup ansible <---> docker
    
    - name: install python dependencies
      become: true
      apt:
        update_cache: yes
        state: latest
        name: python3-pip
    
    - name: install 'Docker SDK for Python'
      #become: true               <--- DO NOT DO THIS!!!
      pip:
        name: docker
        
    - name: Get running containers
      docker_host_info:
        containers: yes
      register: docker_info

    - name: Stop running containers
      docker_container:
        name: "{{ item }}"
        state: stopped
      loop: "{{ docker_info.containers | map(attribute='Id') | list }}"
      
    - name: Prune contianer and images
      docker_prune:
        containers: yes
        images: yes
        networks: yes

    - name: Deploy batch10 application
      command: sudo docker run -it -d -p 9001:8888 --name batch-10 mrasto/batch-10:1.0
